rules:
- id: mcp-js-heuristic-trusted-host-only
  message: 'Heuristic: Likely trusted-host-only MCP (stdio, no server, no auth).'
  severity: INFO
  languages:
  - javascript
  - typescript
  patterns:
  - pattern-either:
    - pattern: require('readline')
    - pattern: process.stdin
    - pattern: import readline from 'readline'
  - pattern-not: app.listen($PORT, "0.0.0.0")
  - pattern-not: server.listen($PORT, "0.0.0.0")
  - pattern-not: if (req.headers.authorization)
  metadata:
    deployment_mode: trusted-host-only
    category: heuristic
- id: mcp-js-heuristic-standalone
  message: "Heuristic: MCP network server with auth \u2014 likely standalone."
  severity: INFO
  languages:
  - javascript
  - typescript
  pattern-either:
  - patterns:
    - pattern-either:
      - pattern: app.listen($PORT, "0.0.0.0")
      - pattern: server.listen($PORT, "0.0.0.0")
    - pattern-either:
      - pattern: if (req.headers.authorization)
      - pattern: authenticate(...)
      - pattern: apiKey = req.header("X-API-Key")
  metadata:
    deployment_mode: standalone
    category: heuristic
- id: mcp-js-heuristic-mixed-use
  message: 'Heuristic: MCP supports both host and network modes.'
  severity: INFO
  languages:
  - javascript
  - typescript
  pattern-either:
  - pattern: "if (process.env.MCP_MODE === \"standalone\") {\n    app.listen($PORT,\
      \ \"0.0.0.0\")\n}"
  - pattern: "if (config.public) {\n    // ... start network server\n}"
  - pattern: if (authEnabled) { app.use(authMiddleware) }
  metadata:
    deployment_mode: mixed-use
    category: heuristic
